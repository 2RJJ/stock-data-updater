name: Update Wave59 Yahoo Data

on:
  schedule:
    - cron: '0 0 * * 1-5'               # Daily full history (00:00 UTC)
    - cron: '*/15 9-16 * * 1-5'         # Every 15 min, 9AMâ€“4PM ET
  workflow_dispatch:
    inputs:
      mode:
        description: 'Run mode'
        required: true
        default: '15min'
        type: choice
        options: ['daily', '15min']

permissions:
  contents: read

jobs:
  update-and-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yfinance pandas

      - name: Run update_data.py
        run: |
          MODE="${{ inputs.mode || '15min' }}"
          if [[ "$MODE" == "daily" ]]; then
            echo "Running DAILY mode (full history)"
            python update_data.py --mode daily --years 30
          else
            echo "Running 15-MIN mode (incremental)"
            python update_data.py --mode 15min
          fi

      - name: Send Wake-on-LAN
        run: |
          MAC="${{ secrets.WOL_MAC }}"
          printf 'f'%.0s {1..6} > /tmp/wol.bin
          printf "%s" "$MAC" | sed 's/://g' | fold -w2 | xargs printf '%s' | \
            awk '{for(i=1;i<=16;i++) printf $0}' >> /tmp/wol.bin
          cat /tmp/wol.bin | xxd -r -p | nc -w1 -u 172.24.255.255 9
          echo "WOL sent to $MAC"

      - name: Wait for ZeroTier to be ONLINE (max 10 min)
        run: |
          echo "Waiting for ZeroTier to be ONLINE..."
          for i in {1..60}; do
            STATUS=$(ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o BatchMode=yes \
              ${{ secrets.SECONDARY_USER }}@${{ secrets.SECONDARY_HOST }} \
              "zerotier-cli status 2>/dev/null | grep -o ONLINE || echo 'OFFLINE'" 2>/dev/null || echo "NO_SSH")
            
            if [[ "$STATUS" == "ONLINE" ]]; then
              echo "ZeroTier is ONLINE"
              ssh -o StrictHostKeyChecking=no -o BatchMode=yes \
                ${{ secrets.SECONDARY_USER }}@${{ secrets.SECONDARY_HOST }} \
                "caffeinate -t 300 &"
              break
            fi
            
            echo "ZeroTier: $STATUS (attempt $i/60)"
            sleep 10
          done

          if [[ "$STATUS" != "ONLINE" ]]; then
            echo "ZeroTier FAILED to come online"
            exit 1
          fi

      - name: Test SSH key authentication
        run: |
          echo "Testing key-based login..."
          ssh -o StrictHostKeyChecking=no -o BatchMode=yes \
            ${{ secrets.SECONDARY_USER }}@${{ secrets.SECONDARY_HOST }} \
            "echo 'KEY AUTH SUCCESS' && whoami && mkdir -p ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Documents/Wave59/Data/Yahoo"

      - name: Transfer ALL data
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SECONDARY_HOST }}
          username: ${{ secrets.SECONDARY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "Wave59_Yahoo_Data/"
          target: "/Users/ronaldjones/Library/Mobile Documents/com~apple~CloudDocs/Documents/Wave59/Data/Yahoo/"
          overwrite
